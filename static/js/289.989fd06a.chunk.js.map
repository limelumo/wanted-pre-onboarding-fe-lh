{"version":3,"file":"static/js/289.989fd06a.chunk.js","mappings":"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","sources":["components/Todo/NewTodo.js","components/Todo/TodoItem.js","components/Todo/Todo.js","pages/TodoList.js"],"sourcesContent":["import { useState, useContext } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { createTodoRequest } from '../../api/todo';\r\nimport TodoContext from '../../store/TodoContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSquarePlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NewTodo = () => {\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  const { getTodoData } = useContext(TodoContext);\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewTodo(e.target.value);\r\n  };\r\n\r\n  const handleEnterTodo = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newTodo.trim().length === 0) {\r\n      alert('내용을 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const response = await createTodoRequest(token, newTodo);\r\n\r\n    if (response.status === 201) {\r\n      getTodoData(token);\r\n      setNewTodo('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <NewTodoForm onSubmit={handleEnterTodo}>\r\n        <NewTodoInput type=\"text\" value={newTodo} onChange={handleInputChange} />\r\n\r\n        <Button>\r\n          <FontAwesomeIcon icon={faSquarePlus} />\r\n        </Button>\r\n      </NewTodoForm>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst NewTodoForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 6em;\r\n`;\r\n\r\nconst NewTodoInput = styled.input`\r\n  width: 90%;\r\n  padding: 1em 0;\r\n  border: none;\r\n  border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 2.2em;\r\n  color: salmon;\r\n`;\r\n\r\nexport default NewTodo;\r\n","import { useState, useContext, useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { updateTodoRequest, deleteTodoRequest } from '../../api/todo';\r\nimport TodoContext from '../../store/TodoContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashCan, faPen, faCheck, faXmark } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TodoItem = ({ id, todo, isCompleted }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const [prevTodo, setPrevTodo] = useState();\r\n  const [editedTodo, setEditedTodo] = useState();\r\n\r\n  const { getTodoData, resetData } = useContext(TodoContext);\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    setPrevTodo(todo);\r\n    setEditedTodo(todo);\r\n  }, [todo]);\r\n\r\n  const handleChange = (e) => {\r\n    setEditedTodo(prevTodo);\r\n    setEditedTodo(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await updateTodoRequest(token, id, editedTodo, isCompleted);\r\n    setIsEdit(false);\r\n    getTodoData(token);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedTodo(prevTodo);\r\n    setPrevTodo(prevTodo);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm('삭제하시겠습니까?')) {\r\n      deleteTodoRequest(token, id);\r\n      resetData(id);\r\n    }\r\n  };\r\n\r\n  const handleCheckCompleted = async () => {\r\n    await updateTodoRequest(token, id, todo, !isCompleted);\r\n    getTodoData(token);\r\n  };\r\n\r\n  const onEditBtn = (\r\n    <>\r\n      <Button type=\"button\" onClick={handleCancel}>\r\n        <FontAwesomeIcon icon={faXmark} />\r\n      </Button>\r\n      <Button type=\"submit\">\r\n        <FontAwesomeIcon icon={faCheck} />\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ItemWrapper onSubmit={handleEdit}>\r\n      <Item>\r\n        <li>\r\n          <CheckBox type=\"checkbox\" checked={isCompleted} onChange={handleCheckCompleted} />\r\n        </li>\r\n        <Content checked={isCompleted}>\r\n          {isEdit ? <EditInput type=\"text\" value={editedTodo} onChange={handleChange} autoFocus /> : todo}\r\n        </Content>\r\n      </Item>\r\n\r\n      <EditBtns>\r\n        {isEdit ? (\r\n          onEditBtn\r\n        ) : (\r\n          <Button type=\"button\" onClick={() => setIsEdit(true)} disabled={isCompleted}>\r\n            <FontAwesomeIcon icon={faPen} />\r\n          </Button>\r\n        )}\r\n\r\n        {isEdit ? null : (\r\n          <Button type=\"button\" onClick={handleDelete}>\r\n            <FontAwesomeIcon icon={faTrashCan} />\r\n          </Button>\r\n        )}\r\n      </EditBtns>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nconst ItemWrapper = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-radius: 0.2em;\r\n  padding: 0.2em 0;\r\n  margin-bottom: 1em;\r\n\r\n  button {\r\n    font-size: 1.12em;\r\n\r\n    &:disabled {\r\n      color: lightgray;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Item = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n  margin-right: 0.8em;\r\n  width: 1.3em;\r\n  height: 1.3em;\r\n\r\n  &:checked {\r\n    accent-color: salmon;\r\n  }\r\n`;\r\n\r\nconst Content = styled.li`\r\n  width: 24em;\r\n  text-decoration: ${(prop) => (prop.checked ? 'line-through' : 'none')};\r\n  color: ${(prop) => (prop.checked ? '#FFB6AB' : 'black')};\r\n  font-weight: ${(prop) => (prop.checked ? 'bold' : 'normal')};\r\n`;\r\n\r\nconst EditInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  padding: 0;\r\n  font-size: 1.01em;\r\n`;\r\n\r\nconst EditBtns = styled.div`\r\n  min-width: 4em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport default TodoItem;\r\n","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport TodoContext from '../../store/TodoContext';\r\n\r\nconst Todo = () => {\r\n  const [listExist, setListExist] = useState(false);\r\n\r\n  const { todoData } = useContext(TodoContext);\r\n\r\n  let todoList = <NoList>Add your first Todo!</NoList>;\r\n\r\n  useEffect(() => {\r\n    if (todoData.length > 0) setListExist(true);\r\n    else setListExist(false);\r\n  }, [todoData.length]);\r\n\r\n  const sortedData = todoData.sort((a, b) => a.isCompleted - b.isCompleted || a - b);\r\n\r\n  if (todoData.length > 0) {\r\n    todoList = (\r\n      <ul>\r\n        {sortedData.map((item) => (\r\n          <TodoItem key={item.id} {...item} isCompleted={item.isCompleted}>\r\n            {item.todo}\r\n          </TodoItem>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return <List listExist={listExist}>{todoList}</List>;\r\n};\r\n\r\nconst List = styled.section`\r\n  min-height: 24em;\r\n  max-height: 30em;\r\n  padding-right: 1em;\r\n  overflow-y: ${(prop) => (prop.listExist ? 'scroll' : 'hidden')};\r\n`;\r\n\r\nconst NoList = styled.h2`\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n`\r\n\r\nexport default Todo;\r\n","import { useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport NewTodo from '../components/Todo/NewTodo';\r\nimport Todo from '../components/Todo/Todo';\r\nimport Header from '../components/UI/Header';\r\nimport TodoContext from '../store/TodoContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TodoList = () => {\r\n  const { getTodoData } = useContext(TodoContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) navigate('/', { replace: true });\r\n    else getTodoData(token);\r\n  }, [navigate, token]);\r\n\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <TodoWrapper>\r\n          <Header text={'Your Todo List'} />\r\n\r\n          <NewTodo />\r\n          <Todo />\r\n\r\n          <SignOut>\r\n            Sign out\r\n            <button onClick={handleSignOut}>\r\n              <FontAwesomeIcon icon={faSignOutAlt} />\r\n            </button>\r\n          </SignOut>\r\n        </TodoWrapper>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TodoWrapper = styled.div`\r\n  min-width: 34em;\r\n  color: #5f4d4b;\r\n`;\r\n\r\nconst SignOut = styled.section`\r\n  margin-top: 5em;\r\n  text-align: center;\r\n\r\n  button {\r\n    font-size: 1.3em;\r\n    margin-left: 0.2em;\r\n  }\r\n`;\r\n\r\nexport default TodoList;\r\n"],"names":["NewTodoForm","styled","NewTodoInput","Button","useState","newTodo","setNewTodo","getTodoData","useContext","TodoContext","token","localStorage","getItem","handleEnterTodo","e","preventDefault","trim","length","alert","createTodoRequest","status","onSubmit","type","value","onChange","target","icon","faSquarePlus","ItemWrapper","Item","CheckBox","Content","prop","checked","EditInput","EditBtns","id","todo","isCompleted","isEdit","setIsEdit","prevTodo","setPrevTodo","editedTodo","setEditedTodo","resetData","useEffect","handleEdit","updateTodoRequest","handleCheckCompleted","onEditBtn","onClick","faXmark","faCheck","autoFocus","disabled","faPen","window","confirm","deleteTodoRequest","faTrashCan","List","listExist","NoList","setListExist","todoData","todoList","sortedData","sort","a","b","map","item","TodoWrapper","SignOut","navigate","useNavigate","replace","Header","text","removeItem","faSignOutAlt"],"sourceRoot":""}